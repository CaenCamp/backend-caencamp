{
  "openapi": "3.0.2",
  "info": {
    "version": "0.1.0",
    "title": "API des CaenCamp",
    "description": "L'API publique des CaenCamp.",
    "license": {
      "name": "GNU General Public License v3.0"
    },
    "contact": {
      "name": "CaenCamp",
      "url": "https://caen.camp",
      "email": "contact@caen.camp"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api"
    }
  ],
  "tags": [
    {
      "name": "Events",
      "description": "Les événements des CaenCamp."
    },
    {
      "name": "Tags",
      "description": "Les tags associés aux événements."
    }
  ],
  "paths": {
    "/events": {
      "get": {
        "summary": "La liste paginée des événements.",
        "description": "La liste paginée des événements.",
        "operationId": "listEvents",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/perPage"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "CaenCamp",
                "Devops CaenCamp",
                "Coding CaenCamp"
              ]
            },
            "in": "query",
            "name": "category",
            "description": "Une catégorie de rencontre des CaenCamp"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "upcomming",
                "past"
              ]
            },
            "in": "query",
            "name": "when",
            "description": "Filtre sur le statut passé ou à venir des événements"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tag",
            "description": "Filtre sur un tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Une liste paginée d'événements",
            "headers": {
              "X-Total-Count": {
                "$ref": "#/components/headers/X-Total-Count"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "summary": "La liste paginée des tags associés aux événements.",
        "description": "La liste paginée des tags associés aux événements.",
        "operationId": "listTags",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Une liste paginée de tags",
            "headers": {
              "X-Total-Count": {
                "$ref": "#/components/headers/X-Total-Count"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tags"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "description": "Un évènement des CaenCamp. Le plus généralement une soirée avec la présentation d'un ou plusieurs talks. Le format des événements respecte le formatage des [events](https://schema.org/Event) de schema.org, où les talks sont des [CreativeWorks](https://schema.org/CreativeWork)",
        "externalDocs": {
          "url": "http://schema.org/Event"
        },
        "properties": {
          "@context": {
            "type": "string",
            "readOnly": true
          },
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "@id": {
            "type": "string",
            "readOnly": true
          },
          "identifier": {
            "description": "L'identifiant unique de l'évènement.",
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": false
          },
          "url": {
            "type": "string",
            "description": "Url permettant d'obtenir les informations sur l'évènement depuis l'api",
            "externalDocs": {
              "url": "http://schema.org/url"
            },
            "nullable": false,
            "format": "uri"
          },
          "name": {
            "description": "Le titre de l'évènement.",
            "externalDocs": {
              "url": "http://schema.org/name"
            },
            "type": "string",
            "nullable": false
          },
          "category": {
            "type": "string",
            "description": "La catégorie de rencontre des CaenCamp",
            "enum": [
              "CaenCamp",
              "Coding CaenCamp",
              "Devops CaenCamp"
            ],
            "nullable": false
          },
          "number": {
            "description": "Le numéro de l'édition au sein de la catégorie.",
            "type": "integer",
            "nullable": true
          },
          "startDate": {
            "description": "La date et l'heure de début au format [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601).",
            "externalDocs": {
              "url": "https://schema.org/startDate"
            },
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "endDate": {
            "description": "La date et l'heure de fin au format [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601).",
            "externalDocs": {
              "url": "https://schema.org/endDate"
            },
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventAttendanceMode": {
            "description": "Le mode de rencontre (offline / online / mixed)",
            "externalDocs": {
              "url": "https://schema.org/eventAttendanceMode"
            },
            "type": "string",
            "format": "uri",
            "nullable": false
          },
          "eventStatus": {
            "description": "Le statut de la rencontre",
            "externalDocs": {
              "url": "https://schema.org/eventStatus"
            },
            "type": "string",
            "format": "uri",
            "nullable": false
          },
          "disambiguatingDescription": {
            "description": "Le résumé de la rencontre au format texte.",
            "externalDocs": {
              "url": "https://schema.org/disambiguatingDescription"
            },
            "type": "string",
            "nullable": false
          },
          "description": {
            "description": "La description complète de l'évènement au format texte avec saut de ligne",
            "externalDocs": {
              "url": "https://schema.org/description"
            },
            "type": "string",
            "nullable": false
          },
          "descriptionHtml": {
            "description": "La description complète de l'évènement au format html",
            "type": "string",
            "nullable": false
          },
          "image": {
            "description": "L'url de l'image de l'évènenement.",
            "externalDocs": {
              "url": "http://schema.org/image"
            },
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "description": "Tableau des tags associés à l'évenement.",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "meetupId": {
            "description": "L'identifiant de la rencontre sur meetup.com, pour les inscriptions.",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Events": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Event"
        }
      },
      "Tag": {
        "required": [
          "identifer",
          "label"
        ],
        "properties": {
          "identifer": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Tag"
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "headers": {
      "X-Total-Count": {
        "description": "Return information about total items to paginate",
        "schema": {
          "type": "integer"
        },
        "example": 42,
        "required": false
      },
      "Link": {
        "description": "Return information about pagination actions",
        "schema": {
          "type": "string"
        },
        "example": "</resources?currentPage=3&perPage=10>; rel=\"self\",\n</resources?currentPage=1&perPage=10>; rel=\"first\",\n</resources?currentPage=2&perPage=10>; rel=\"prev\",\n</resources?currentPage=4&perPage=10>; rel=\"next\",\n</resources?currentPage=5&perPage=10>; rel=\"last\",\n",
        "required": false
      }
    },
    "parameters": {
      "perPage": {
        "name": "perPage",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 25,
          "format": "int32",
          "minimum": 1
        },
        "description": "Le paramètre de pagination pour définir le nombre d'éléments par page."
      },
      "currentPage": {
        "name": "currentPage",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 1,
          "format": "int32",
          "minimum": 1
        },
        "description": "Le paramètre de pagination pour définir la page courante"
      }
    },
    "securitySchemes": {}
  }
}