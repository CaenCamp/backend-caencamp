{
  "openapi": "3.0.2",
  "info": {
    "version": "0.1.0",
    "title": "API des CaenCamp",
    "description": "L'API publique des CaenCamp.",
    "license": {
      "name": "GNU General Public License v3.0"
    },
    "contact": {
      "name": "CaenCamp",
      "url": "https://caen.camp",
      "email": "contact@caen.camp"
    }
  },
  "servers": [
    {
      "url": "https://api.caen.camp",
      "description": "Serveur de production (live data)"
    },
    {
      "url": "http://localhost:3001",
      "description": "Serveur local (données de dev.)"
    }
  ],
  "tags": [
    {
      "name": "Events",
      "description": "Les événements des CaenCamp."
    },
    {
      "name": "Tags",
      "description": "Les tags associés aux événements."
    }
  ],
  "paths": {
    "/api/events": {
      "get": {
        "summary": "La liste paginée des événements.",
        "description": "La liste paginée des événements.",
        "operationId": "listEvents",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/perPage"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "CaenCamp",
                "Devops CaenCamp",
                "Coding CaenCamp"
              ]
            },
            "in": "query",
            "name": "category",
            "description": "Une catégorie de rencontre des CaenCamp"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "upcomming",
                "past"
              ]
            },
            "in": "query",
            "name": "when",
            "description": "Filtre sur le statut passé ou à venir des événements"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tag",
            "description": "Filtre sur un tag"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "hasVideo",
            "description": "Filtre sur l'existance d'une vidéo de l'événement."
          }
        ],
        "responses": {
          "200": {
            "description": "Une liste paginée d'événements",
            "headers": {
              "X-Total-Count": {
                "$ref": "#/components/headers/X-Total-Count"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Obtenir les détails d'un événement",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "L'événement demandé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-api-events-id",
        "description": "Un événement"
      }
    },
    "/api/tags": {
      "get": {
        "summary": "La liste paginée des tags associés aux événements.",
        "description": "La liste paginée des tags associés aux événements.",
        "operationId": "listTags",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/perPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Une liste paginée de tags",
            "headers": {
              "X-Total-Count": {
                "$ref": "#/components/headers/X-Total-Count"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tags"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "description": "Un évènement des CaenCamp. Le plus généralement une soirée avec la présentation d'un ou plusieurs talks. Le format des événements respecte le formatage des [events](https://schema.org/Event) de schema.org, où les talks sont des [CreativeWorks](https://schema.org/CreativeWork)",
        "externalDocs": {
          "url": "https://schema.org/Event"
        },
        "properties": {
          "@context": {
            "type": "string",
            "readOnly": true
          },
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "@id": {
            "type": "string",
            "readOnly": true
          },
          "identifier": {
            "description": "L'identifiant unique de l'évènement.",
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": false
          },
          "url": {
            "type": "string",
            "description": "Url permettant d'obtenir les informations sur l'évènement depuis l'api",
            "externalDocs": {
              "url": "http://schema.org/url"
            },
            "nullable": false,
            "format": "uri"
          },
          "name": {
            "description": "Le titre de l'évènement.",
            "externalDocs": {
              "url": "http://schema.org/name"
            },
            "type": "string",
            "nullable": false
          },
          "category": {
            "type": "string",
            "description": "La catégorie de rencontre des CaenCamp",
            "enum": [
              "CaenCamp",
              "Coding CaenCamp",
              "Devops CaenCamp"
            ],
            "nullable": false
          },
          "number": {
            "description": "Le numéro de l'édition au sein de la catégorie.",
            "type": "integer",
            "nullable": true
          },
          "isAccessibleForFree": {
            "description": "La rencontre est-elle gratuite.",
            "type": "boolean"
          },
          "inLanguage": {
            "$ref": "#/components/schemas/Language"
          },
          "startDate": {
            "description": "La date et l'heure de début au format [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601).",
            "externalDocs": {
              "url": "https://schema.org/startDate"
            },
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "endDate": {
            "description": "La date et l'heure de fin au format [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601).",
            "externalDocs": {
              "url": "https://schema.org/endDate"
            },
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventAttendanceMode": {
            "description": "Le mode de rencontre (offline / online / mixed)",
            "externalDocs": {
              "url": "https://schema.org/eventAttendanceMode"
            },
            "type": "string",
            "format": "uri",
            "nullable": false
          },
          "eventStatus": {
            "description": "Le statut de la rencontre",
            "externalDocs": {
              "url": "https://schema.org/eventStatus"
            },
            "type": "string",
            "format": "uri",
            "nullable": false
          },
          "disambiguatingDescription": {
            "description": "Le résumé de la rencontre au format texte.",
            "externalDocs": {
              "url": "https://schema.org/disambiguatingDescription"
            },
            "type": "string",
            "nullable": false
          },
          "description": {
            "description": "La description complète de l'évènement au format texte avec saut de ligne",
            "externalDocs": {
              "url": "https://schema.org/description"
            },
            "type": "string",
            "nullable": false
          },
          "descriptionHtml": {
            "description": "La description complète de l'évènement au format html",
            "type": "string",
            "nullable": false
          },
          "image": {
            "description": "L'url de l'image de l'évènenement.",
            "externalDocs": {
              "url": "http://schema.org/image"
            },
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "description": "Tableau des tags associés à l'évenement.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "hasVideo": {
            "description": "La rencontre a-t-elle une vidéo ?",
            "type": "boolean"
          },
          "meetupId": {
            "description": "L'identifiant de la rencontre sur meetup.com, pour les inscriptions.",
            "type": "string",
            "nullable": true
          },
          "performers": {
            "$ref": "#/components/schemas/Performers"
          },
          "location": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VirtualLocation"
              },
              {
                "$ref": "#/components/schemas/Place"
              },
              {
                "type": "object"
              }
            ]
          },
          "organizer": {
            "$ref": "#/components/schemas/Organization"
          },
          "sponsor": {
            "$ref": "#/components/schemas/Organization"
          },
          "workPerformed": {
            "description": "La liste des talks présentés durant l'événement.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeWork"
            }
          }
        },
        "required": [
          "@context",
          "@type",
          "@id",
          "identifier",
          "url",
          "name",
          "category",
          "number",
          "isAccessibleForFree",
          "inLanguage",
          "startDate",
          "eventAttendanceMode",
          "disambiguatingDescription",
          "tags",
          "hasVideo",
          "performers",
          "location",
          "organizer",
          "workPerformed"
        ]
      },
      "Events": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Event"
        }
      },
      "Person": {
        "type": "object",
        "description": "Une personne intervenant un moment ou un autre aux CaenCamp. Par exemple un speaker",
        "externalDocs": {
          "url": "https://schema.org/Person"
        },
        "properties": {
          "@context": {
            "type": "string",
            "readOnly": true
          },
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "@id": {
            "type": "string",
            "readOnly": true
          },
          "identifier": {
            "description": "L'identifiant unique de la personne.",
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": false
          },
          "url": {
            "type": "string",
            "description": "Url permettant d'obtenir les informations sur la personne depuis l'api",
            "externalDocs": {
              "url": "http://schema.org/url"
            },
            "nullable": false,
            "format": "uri"
          },
          "name": {
            "description": "Le nom de la personne.",
            "externalDocs": {
              "url": "http://schema.org/name"
            },
            "type": "string",
            "nullable": false
          },
          "disambiguatingDescription": {
            "description": "Le résumé de la personne au format texte.",
            "externalDocs": {
              "url": "https://schema.org/knowsAbout"
            },
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "@type",
          "@id",
          "identifier",
          "url",
          "name",
          "disambiguatingDescription"
        ],
        "title": ""
      },
      "Performers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Person"
        },
        "description": "L'ensemble des speakers d'une rencontre."
      },
      "Organization": {
        "type": "object",
        "description": "Une structure liée au numérique.",
        "externalDocs": {
          "url": "https://schema.org/Organization"
        },
        "title": "",
        "nullable": true,
        "properties": {
          "@context": {
            "type": "string",
            "readOnly": true
          },
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "@id": {
            "type": "string",
            "readOnly": true
          },
          "identifier": {
            "description": "L'identifiant unique de l'organisation.",
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": false
          },
          "url": {
            "type": "string",
            "description": "Url permettant d'obtenir les informations sur l'organisation depuis l'api",
            "externalDocs": {
              "url": "http://schema.org/url"
            },
            "nullable": false,
            "format": "uri"
          },
          "name": {
            "description": "Le nom de l'organisation.",
            "externalDocs": {
              "url": "http://schema.org/name"
            },
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "@type",
          "@id",
          "identifier",
          "url",
          "name"
        ]
      },
      "CreativeWork": {
        "type": "object",
        "description": "Le type le plus générique de travail créatif. Pour les CaenCamp, il s'agira de talks.",
        "externalDocs": {
          "url": "https://schema.org/CreativeWork"
        },
        "properties": {
          "@context": {
            "type": "string",
            "readOnly": true
          },
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "@id": {
            "type": "string",
            "readOnly": true
          },
          "identifier": {
            "description": "L'identifiant unique du talk.",
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": false
          },
          "url": {
            "type": "string",
            "description": "Url permettant d'obtenir les informations sur le talk depuis l'api",
            "externalDocs": {
              "url": "http://schema.org/url"
            },
            "nullable": false,
            "format": "uri"
          },
          "name": {
            "description": "Le titre du talk.",
            "externalDocs": {
              "url": "http://schema.org/name"
            },
            "type": "string",
            "nullable": false
          },
          "format": {
            "$ref": "#/components/schemas/TalkType"
          },
          "video": {
            "type": "string",
            "description": "Url de la video du talk.",
            "externalDocs": {
              "url": "http://schema.org/url"
            },
            "format": "uri",
            "nullable": true
          },
          "abstract": {
            "description": "Le résumé du talk au format texte.",
            "externalDocs": {
              "url": "https://schema.org/abstract"
            },
            "type": "string",
            "nullable": false
          },
          "description": {
            "description": "La description complète du talk au format texte avec saut de ligne",
            "externalDocs": {
              "url": "https://schema.org/description"
            },
            "type": "string",
            "nullable": false
          },
          "descriptionHtml": {
            "description": "La description complète du talk au format html",
            "type": "string",
            "nullable": false
          },
          "maintainers": {
            "description": "La liste des speakers du talk",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          }
        },
        "required": [
          "@context",
          "@type",
          "@id",
          "identifier",
          "url",
          "name",
          "video",
          "abstract",
          "descriptionHtml"
        ]
      },
      "VirtualLocation": {
        "type": "object",
        "description": "Un service utilisé pour un événement online.",
        "externalDocs": {
          "url": "https://schema.org/VirtualLocation"
        },
        "properties": {
          "@context": {
            "type": "string",
            "readOnly": true
          },
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "@id": {
            "type": "string",
            "readOnly": true
          },
          "identifier": {
            "description": "L'identifiant unique du service.",
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": false
          },
          "url": {
            "type": "string",
            "description": "L'url de l'événement sur le service",
            "externalDocs": {
              "url": "http://schema.org/url"
            },
            "nullable": false,
            "format": "uri"
          },
          "name": {
            "description": "Le nom du service.",
            "externalDocs": {
              "url": "http://schema.org/name"
            },
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "@type",
          "@id",
          "identifier",
          "url",
          "name"
        ]
      },
      "Place": {
        "type": "object",
        "description": "Un lieu où se déroule un événement.",
        "externalDocs": {
          "url": "https://schema.org/Place"
        },
        "properties": {
          "@context": {
            "type": "string",
            "readOnly": true
          },
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "@id": {
            "type": "string",
            "readOnly": true
          },
          "identifier": {
            "description": "L'identifiant unique du lieu.",
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": false
          },
          "url": {
            "type": "string",
            "description": "Url permettant d'obtenir les informations sur le lieux depuis l'api",
            "externalDocs": {
              "url": "http://schema.org/url"
            },
            "nullable": false,
            "format": "uri"
          },
          "name": {
            "description": "Le nom du lieu.",
            "externalDocs": {
              "url": "http://schema.org/name"
            },
            "type": "string",
            "nullable": false
          },
          "address": {
            "$ref": "#/components/schemas/PostalAddress"
          }
        },
        "required": [
          "@type",
          "@id",
          "identifier",
          "url",
          "name",
          "address"
        ]
      },
      "PostalAddress": {
        "type": "object",
        "description": "Une adresse physique",
        "externalDocs": {
          "url": "http://schema.org/PostalAddress"
        },
        "properties": {
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "streetAddress": {
            "description": "Le détails de l'adresse (batiment, rue, ...)",
            "externalDocs": {
              "url": "http://schema.org/streetAddress"
            },
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "description": "Le code postale.",
            "externalDocs": {
              "url": "http://schema.org/postalCode"
            },
            "type": "string",
            "nullable": true
          },
          "addressLocality": {
            "description": "La ville.",
            "externalDocs": {
              "url": "http://schema.org/addressLocality"
            },
            "type": "string",
            "nullable": true
          },
          "addressCountry": {
            "description": "Le pays au format [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1).",
            "externalDocs": {
              "url": "http://schema.org/addressCountry"
            },
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "@type",
          "streetAddress",
          "postalCode",
          "addressLocality",
          "addressCountry"
        ],
        "x-internal": false
      },
      "Language": {
        "type": "object",
        "description": "Langues naturelles telles que le français, le tamoul, l'hindi, l'anglais, etc.",
        "externalDocs": {
          "url": "https://schema.org/Language"
        },
        "properties": {
          "@type": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "Le langue.",
            "externalDocs": {
              "url": "http://schema.org/name"
            },
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "@type",
          "name"
        ],
        "x-internal": false
      },
      "Tag": {
        "required": [
          "identifer",
          "label"
        ],
        "properties": {
          "identifer": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "TalkType": {
        "required": [
          "label",
          "durationInMinutes"
        ],
        "properties": {
          "label": {
            "type": "string"
          },
          "durationInMinutes": {
            "type": "integer"
          }
        },
        "description": "Le type de talk (normal, lightning de 5 min...)"
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Tag"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "message"
        ]
      }
    },
    "headers": {
      "X-Total-Count": {
        "description": "Return information about total items to paginate",
        "schema": {
          "type": "integer"
        },
        "example": 42,
        "required": false
      },
      "Link": {
        "description": "Return information about pagination actions",
        "schema": {
          "type": "string"
        },
        "example": "</resources?currentPage=3&perPage=10>; rel=\"self\",\n</resources?currentPage=1&perPage=10>; rel=\"first\",\n</resources?currentPage=2&perPage=10>; rel=\"prev\",\n</resources?currentPage=4&perPage=10>; rel=\"next\",\n</resources?currentPage=5&perPage=10>; rel=\"last\",\n",
        "required": false
      }
    },
    "parameters": {
      "perPage": {
        "name": "perPage",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 25,
          "format": "int32",
          "minimum": 1
        },
        "description": "Le paramètre de pagination pour définir le nombre d'éléments par page."
      },
      "currentPage": {
        "name": "currentPage",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 1,
          "format": "int32",
          "minimum": 1
        },
        "description": "Le paramètre de pagination pour définir la page courante"
      },
      "id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "L'identifiant unique d'un objet"
      }
    },
    "securitySchemes": {}
  }
}